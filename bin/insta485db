#!/bin/bash
# insta485db

# Stop on errors
# See https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
# Usage: ./bin/insta485db (create|destroy|reset|dump)
set -Eeuo pipefail

DB="var/insta485.sqlite3"
UPLOADS_DIR="var/uploads"
SCHEMA="sql/schema.sql"
DATA="sql/data.sql"
STARTER_UPLOADS="sql/uploads"

# Sanity check command line options
usage() {
  echo "Usage: $0 (create|destroy|reset|dump)"
}

create_db() {
  if [ -f "$DB" ]; then
    echo "Error: database already exists"
    exit 1
  fi

  echo "+ mkdir -p $UPLOADS_DIR"
  mkdir -p "$UPLOADS_DIR"

  echo "+ sqlite3 $DB < $SCHEMA"
  sqlite3 "$DB" < "$SCHEMA"

  echo "+ sqlite3 $DB < $DATA"
  sqlite3 "$DB" < "$DATA"

  echo "+ cp $STARTER_UPLOADS/* $UPLOADS_DIR/"
  cp "$STARTER_UPLOADS"/* "$UPLOADS_DIR"/
}

destroy_db() {
  echo "+ rm -rf $DB $UPLOADS_DIR"
  rm -rf "$DB" "$UPLOADS_DIR"
}

reset_db() {
  destroy_db
  create_db
}

dump_db() {
  if [ ! -f "$DB" ]; then
    echo "Error: database does not exist"
    exit 1
  fi

  for table in comments following likes posts users; do
    echo "+ sqlite3 -batch -line $DB 'SELECT * FROM $table'"
    sqlite3 -batch -line "$DB" "SELECT * FROM $table"
    echo "..."
    echo
  done
}

if [ $# -ne 1 ]; then
  usage
  exit 1
fi

# Parse argument.  $1 is the first argument
case "$1" in
  create)
    create_db
    ;;
  destroy)
    destroy_db
    ;;
  reset)
    reset_db
    ;;
  dump)
    dump_db
    ;;
  *)
    usage
    exit 1
    ;;
esac
